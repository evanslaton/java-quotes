import com.google.gson.Gson;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.stream.Collectors;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    public static void main(String[] args) {

        String randomQuote = getRandomQuoteFromInternet();
        System.out.println(randomQuote);
                System.out.println("***************************");
        System.out.println(randomQuote.split("\",")[0]);

//        Path file = Paths.get("./resources/recentquotes.json");
//        BufferedReader quotesFile = readJsonFile(file);
//        Quote[] quotes = parseJson(quotesFile);
//        int rand = getRandom(quotes.length);
//
//        // Search for
//        if (args.length > 0) {
//            if (args[0].equals("author")){
//                System.out.println(args[0]);
//                System.out.println(Quote.searchAuthor(quotes, args[1]));
//            }
//            else if (args[0].equals("contains")){
//                System.out.println(Quote.searchContains(quotes, args[1]));
//            }
//        } else {
//            System.out.println(quotes[rand].toString());
//        }
    }

    // Gets a random quotes from the Formismatic API
    public static String getRandomQuoteFromInternet() {
        try {
            // Sends a GET request to Formismatic
            URL url = new URL("http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en");
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");

            // Saves the response as a string
            BufferedReader response = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            String inputLine = response.readLine();

            // Closes the connection
            response.close();
            connection.disconnect();
            return inputLine;
        } catch (IOException error) {
            System.out.println(error);
        }
        return null;
    }

    // Reads a and returns a json file
    public static BufferedReader readJsonFile(Path path) {
        try {
            BufferedReader file = Files.newBufferedReader(path);
            return file;
        } catch (IOException error) {
            System.err.format("IOException: %s%n", error);
        }
        return null;
    }

    // Parses a json file using gson and returns an array of Quote instances
    public static Quote[] parseJson(BufferedReader file) {
            Gson gson = new Gson();
            return gson.fromJson(file, Quote[].class);
    }

    // Gets a random number
    public static int getRandom(int num) {
        return (int) Math.floor(Math.random()*(num));
    }
}
